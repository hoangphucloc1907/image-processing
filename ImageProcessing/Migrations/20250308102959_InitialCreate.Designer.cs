// <auto-generated />
using System;
using ImageProcessing;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImageProcessing.Migrations
{
    [DbContext(typeof(ImageDbContext))]
    [Migration("20250308102959_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ImageProcessing.Models.ImageVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<int>("VariantTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VariantTypeId");

                    b.ToTable("ImageVariants");
                });

            modelBuilder.Entity("ImageProcessing.Models.VariantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VariantTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxSize = 0,
                            Name = "Original",
                            Quality = 100
                        },
                        new
                        {
                            Id = 2,
                            MaxSize = 2048,
                            Name = "TwoK",
                            Quality = 85
                        },
                        new
                        {
                            Id = 3,
                            MaxSize = 1200,
                            Name = "Web",
                            Quality = 75
                        },
                        new
                        {
                            Id = 4,
                            MaxSize = 768,
                            Name = "Mobile",
                            Quality = 70
                        },
                        new
                        {
                            Id = 5,
                            MaxSize = 300,
                            Name = "Thumbnail",
                            Quality = 65
                        });
                });

            modelBuilder.Entity("ImageProcessing.Models.ImageVariant", b =>
                {
                    b.HasOne("ImageProcessing.Models.VariantType", "VariantType")
                        .WithMany()
                        .HasForeignKey("VariantTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VariantType");
                });
#pragma warning restore 612, 618
        }
    }
}
